name: AutoTest

on:
  workflow_dispatch:  # manually trigger
  workflow_call:
jobs:
  #Windows X86_64
  win64_test_MSVC_cpp14:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_MSVC.bat 14
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"
  
  win64_test_Clang_cpp14:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_Clang.bat 14
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_MSVC_cpp17:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_MSVC.bat 17
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_Clang_cpp17:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_Clang.bat 17
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_MSVC_cpp20:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_MSVC.bat 20
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_Clang_cpp20:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_Clang.bat 20
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_MSVC_cpp23:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_MSVC.bat 23
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  win64_test_Clang_cpp23:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Windows
        run: |
          cd build\test\win64  
          .\RunTest_Clang.bat 23
        env:
          VS_PATH: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\IDE"

  #Windows ARM64
  win64_arm64_test_Clang_cpp14:
    runs-on: windows-11-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Install Clang
        run: |
          choco uninstall -y llvm --all-versions
          choco install -y llvm
        shell: powershell

      - name: Build for Windows
        run: |
          cd build\test\win64  
          mkdir build_folder
          cd build_folder
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=14 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make
          objdump -f BqLogUnitTest.exe
          .\BqLogUnitTest.exe
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=14 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make -j4
          .\BqLogUnitTest.exe

  win64_arm64_test_Clang_cpp17:
    runs-on: windows-11-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang
        run: |
          choco uninstall -y llvm --all-versions
          choco install -y llvm
        shell: powershell

      - name: Build for Windows
        run: |
          cd build\test\win64  
          mkdir build_folder
          cd build_folder
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=17 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make
          objdump -f BqLogUnitTest.exe
          .\BqLogUnitTest.exe
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=17 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make -j4
          .\BqLogUnitTest.exe

  win64_arm64_test_Clang_cpp20:
    runs-on: windows-11-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang
        run: |
          choco uninstall -y llvm --all-versions
          choco install -y llvm
        shell: powershell

      - name: Build for Windows
        run: |
          cd build\test\win64  
          mkdir build_folder
          cd build_folder
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=20 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make
          objdump -f BqLogUnitTest.exe
          .\BqLogUnitTest.exe
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=20 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          make -j4
          .\BqLogUnitTest.exe

  win64_arm64_test_Clang_cpp23:
    runs-on: windows-11-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Clang
        run: |
          choco uninstall -y llvm --all-versions
          choco install -y llvm
        shell: powershell

      - name: Add LLVM to PATH and Remove MinGW from Path
        run: |
          $env:Path = ($env:Path.Split(';') | Where-Object { $_ -notlike '*MinGW*' }) -join ';'
          $env:Path += ";C:\Program Files\LLVM\bin"
          echo "PATH=$env:Path" >> $env:GITHUB_ENV
        shell: powershell

      - name: Verify Tools
        run: |
          clang --version
          lld --version
          make --version
          dir "$env:JAVA_HOME\include"
        shell: powershell

      - name: Build for Windows
        run: |
          cd build\test\win64  
          mkdir build_folder
          cd build_folder
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=23 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -CMAKE_LINKER=ld.lld -DCMAKE_CXX_FLAGS="-target aarch64-w64-mingw32"
          make
          objdump -f BqLogUnitTest.exe
          .\BqLogUnitTest.exe
          cmake ..\..\..\..\test -G "MinGW Makefiles" -DTARGET_PLATFORM:STRING=win64 -DCPP_VER=23 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -CMAKE_LINKER=ld.lld -DCMAKE_CXX_FLAGS="-target aarch64-w64-mingw32"
          make -j4
          .\BqLogUnitTest.exe

  #Linux-ubuntu-X86_64
  ubuntu_test_GCC_cpp11:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 11
  
  ubuntu_test_Clang_cpp11:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 11

  ubuntu_test_GCC_cpp14:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 14

  ubuntu_test_Clang_cpp14:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 14

  ubuntu_test_GCC_cpp17:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 17

  ubuntu_test_Clang_cpp17:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 17

  ubuntu_test_GCC_cpp20:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 20

  ubuntu_test_Clang_cpp20:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 20

  ubuntu_test_GCC_cpp23:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 23

  ubuntu_test_Clang_cpp23:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 23
          
  #Linux-ubuntu-ARM64
  ubuntu_arm64_test_GCC_cpp11:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 11

  ubuntu_arm64_test_Clang_cpp11:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 11

  ubuntu_arm64_test_GCC_cpp14:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 14

  ubuntu_arm64_test_Clang_cpp14:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 14

  ubuntu_arm64_test_GCC_cpp17:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 17

  ubuntu_arm64_test_Clang_cpp17:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 17

  ubuntu_arm64_test_GCC_cpp20:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 20

  ubuntu_arm64_test_Clang_cpp20:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 20

  ubuntu_arm64_test_GCC_cpp23:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_GCC.sh 23

  ubuntu_arm64_test_Clang_cpp23:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build for Linux
        run: |
          cd build/test/linux  
          chmod +x *.sh
          ./RunTest_Clang.sh 23

  #linux-debian
  debian_test_GCC_cpp17:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/pippocao/bqlog/debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install necessary tools (gcc and clang)
        run: |
          apt-get update
          apt-get install -y gcc clang g++ make cmake

          apt-get install -y software-properties-common
          apt-get update
          apt-get install -y openjdk-17-jdk

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Build for Debian
        run: |
            cd build/test/linux  
            chmod +x *.sh
            ./RunTest_GCC.sh 
  
  debian_test_Clang_cpp17:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/pippocao/bqlog/debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install necessary tools (gcc and clang)
        run: |
          apt-get update
          apt-get install -y gcc clang g++ make cmake

          apt-get install -y software-properties-common
          apt-get update
          apt-get install -y openjdk-17-jdk

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV

      - name: Build for Debian
        run: |
            cd build/test/linux  
            chmod +x *.sh
            ./RunTest_Clang.sh 

  debian32_test_GCC_cpp17:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/pippocao/bqlog/i386_debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386" >> $GITHUB_ENV

      - name: Build for Debian 32
        run: |
            cd build/test/linux  
            chmod +x *.sh
            ./RunTest_GCC.sh 

  debian32_test_Clang_cpp17:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/pippocao/bqlog/i386_debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386" >> $GITHUB_ENV

      - name: Build for Debian 32
        run: |
            cd build/test/linux  
            chmod +x *.sh
            ./RunTest_Clang.sh 

  #Mac
  mac_apple_silicon_test_cpp11:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up XCode
        run: sudo xcode-select --switch /Applications/Xcode.app

      - name: Build for macOS
        run: |
          cd build/test/mac  
          chmod +x *.sh
          ./RunTest.sh 11

  mac_apple_silicon_test_cpp14:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up XCode
        run: sudo xcode-select --switch /Applications/Xcode.app

      - name: Build for macOS
        run: |
          cd build/test/mac  
          chmod +x *.sh
          ./RunTest.sh 14

  mac_apple_silicon_test_cpp17:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up XCode
        run: sudo xcode-select --switch /Applications/Xcode.app

      - name: Build for macOS
        run: |
          cd build/test/mac  
          chmod +x *.sh
          ./RunTest.sh 17

  mac_apple_silicon_test_cpp20:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up XCode
        run: sudo xcode-select --switch /Applications/Xcode.app

      - name: Build for macOS
        run: |
          cd build/test/mac  
          chmod +x *.sh
          ./RunTest.sh 20

  mac_apple_silicon_test_cpp23:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up XCode
        run: sudo xcode-select --switch /Applications/Xcode.app

      - name: Build for macOS
        run: |
          cd build/test/mac  
          chmod +x *.sh
          ./RunTest.sh 23

  #Unix-FreeBSD
  freeBSD_test_GCC_cpp17:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run in FreeBSD
        id: RunInFreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y gcc cmake bash openjdk11

          run: |
            set -e -x
            pkg info -l openjdk11 | grep 'bin/java'
            export JAVA_HOME="/usr/local/openjdk11"
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "PATH=$PATH" >> $GITHUB_ENV
            cd build/test/unix_like  
            chmod +x *.sh
            ./RunTest_GCC.sh 
  
  freeBSD_test_Clang_cpp17:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run in FreeBSD
        id: RunInFreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          prepare: |
            pkg install -y gcc cmake bash openjdk11

          run: |
            set -e -x
            pkg info -l openjdk11 | grep 'bin/java'
            export JAVA_HOME="/usr/local/openjdk11"
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "PATH=$PATH" >> $GITHUB_ENV
            cd build/test/unix_like  
            chmod +x *.sh
            ./RunTest_Clang.sh 
