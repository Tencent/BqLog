name: NodeJs Native Build
on:  
  workflow_dispatch:  # manually trigger
  workflow_call:

permissions:
  contents: write

jobs:
  #Windows
  build_windows_x86_64_lib_MSVC:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers
          npx node-gyp install

      - name: Build for Windows
        run: |
          cd build\lib\win64
          .\build_all_and_pack.bat native msvc YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_windows_x86_64_libs
          path: ${{ github.workspace }}/dist

  build_windows_x86_64_lib_Clang:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers
          npx node-gyp install

      - name: Build for Windows
        run: |
          cd build\lib\win64
          .\build_all_and_pack.bat native clang YES YES

  build_windows_arm64_lib_MSVC:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers
          npx node-gyp install --arch=arm64

      - name: Build for Windows
        run: |
          cd build\lib\win64
          .\build_all_and_pack.bat arm64 msvc YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_windows_arm64_libs
          path: ${{ github.workspace }}/dist

  build_windows_arm64_lib_Clang:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers
          npx node-gyp install --arch=arm64

      - name: Build for Windows
        run: |
          cd build\lib\win64
          .\build_all_and_pack.bat arm64 clang YES YES

  #Linux-ubuntu-x86_64
  build_ubuntu_x86_64_lib_Clang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers

      - name: Build for Linux
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native clang YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_linux_x86_64_libs
          path: ${{ github.workspace }}/dist

  #Linux-ubuntu-x86_64
  build_ubuntu_x86_64_lib_GCC:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers

      - name: Build for Linux
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native gcc YES YES

  #Linux-ubuntu-arm64
  build_ubuntu_arm64_lib_Clang:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers

      - name: Build for Linux
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native clang YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_linux_arm64_libs
          path: ${{ github.workspace }}/dist

  build_ubuntu_arm64_lib_GCC:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers

      - name: Build for Linux
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native gcc YES YES

  #Linux-debian-x86
  build_debian_x86_lib_Clang:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pippocao/bqlog/i386_debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable UTF-8 locale
        run: |
          apt-get update
          apt-get install -y locales
          sed -i 's/# *en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
          sed -i 's/# *zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/' /etc/locale.gen
          locale-gen
          update-locale LANG=en_US.UTF-8
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANGUAGE=en_US:en" >> $GITHUB_ENV
          locale

      - name: Install necessary tools (gcc and clang)
        run: |
          apt-get update
          apt-get install -y gcc clang g++ make cmake gdb
          apt-get install -y software-properties-common
          apt-get update
          apt-get install -y openjdk-17-jdk
          apt-get install -y openssh-client

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386" >> $GITHUB_ENV

      - name: Install Node.js and node-api-headers (Debian i386)
        run: |
          apt-get update
          apt-get install -y nodejs npm
          npm install node-api-headers

      - name: Build for Debian 32
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native clang YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_linux_x86_libs
          path: ${{ github.workspace }}/dist

  build_debian_x86_lib_GCC:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/pippocao/bqlog/i386_debian:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable UTF-8 locale
        run: |
          apt-get update
          apt-get install -y locales
          sed -i 's/# *en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
          sed -i 's/# *zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/' /etc/locale.gen
          locale-gen
          update-locale LANG=en_US.UTF-8
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANGUAGE=en_US:en" >> $GITHUB_ENV
          locale

      - name: Install necessary tools (gcc and clang)
        run: |
          apt-get update
          apt-get install -y gcc clang g++ make cmake gdb
          apt-get install -y software-properties-common
          apt-get update
          apt-get install -y openjdk-17-jdk
          apt-get install -y openssh-client

      - name: Set up Java
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-i386" >> $GITHUB_ENV

      - name: Install Node.js and node-api-headers (Debian i386)
        run: |
          apt-get update
          apt-get install -y nodejs npm
          npm install node-api-headers

      - name: Build for Debian 32
        run: |
          cd build/lib/linux
          chmod +x *.sh
          ./build_all_and_pack.sh native gcc YES YES


  #Mac
  build_mac_lib:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install node-api-headers
        run: |
          npm install node-api-headers

      - name: Build for Mac
        run: |
          cd build/lib/mac
          chmod +x *.sh
          ./build_all_and_pack.sh YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_macos_universal_binary_libs
          path: ${{ github.workspace }}/dist

  #freebsd_x86_64
  build_freebsd_x86_64_libs_Clang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run in FreeBSD
        id: RunInFreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          mem: 8192
          prepare: |
            pkg install -y llvm cmake bash openjdk11 gdb gcc node
            pkg install -y npm-node22 || pkg install -y npm-node20 || pkg install -y npm
          run: |
            set -e -x
            pkg info -l openjdk11 | grep 'bin/java'
            export JAVA_HOME="/usr/local/openjdk11"
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "PATH=$PATH" >> $GITHUB_ENV

            # Install node-api-headers at repo root before build
            npm install node-api-headers

            cd build/lib/unix_like
            chmod +x *.sh
            ls -l
            export BQ_UNIX_VERSION=freebsd
            ./build_all_and_pack.sh native clang YES YES

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node_freebsd_x86_64_libs
          path: ${{ github.workspace }}/dist

  #freebsd_x86_64
  build_freebsd_x86_64_libs_GCC:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run in FreeBSD
        id: RunInFreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          mem: 8192
          prepare: |
            pkg install -y llvm cmake bash openjdk11 gdb gcc node
            pkg install -y npm-node22 || pkg install -y npm-node20 || pkg install -y npm
          run: |
            set -e -x
            pkg info -l openjdk11 | grep 'bin/java'
            export JAVA_HOME="/usr/local/openjdk11"
            export PATH="$JAVA_HOME/bin:$PATH"
            echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
            echo "PATH=$PATH" >> $GITHUB_ENV

            # Install node-api-headers at repo root before build
            npm install node-api-headers

            cd build/lib/unix_like
            chmod +x *.sh
            ls -l
            export BQ_UNIX_VERSION=freebsd
            ./build_all_and_pack.sh native gcc YES YES